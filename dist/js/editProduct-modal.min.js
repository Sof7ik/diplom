"use strict";

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function getProductInfo(_x, _x2) {
  return _getProductInfo.apply(this, arguments);
}

function _getProductInfo() {
  _getProductInfo = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(event, prodID) {
    var productId, data;
    return regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            if (event) {
              productId = event.currentTarget.parentNode.parentNode.dataset.productId;
            }

            console.log(productId);
            data = new FormData();
            data.append('product-id', productId);
            _context.next = 6;
            return fetch('/src/php/getProductInfo.php', {
              method: 'POST',
              body: data
            }).then(function (response) {
              return response.json();
            }).then(function (jsoned) {
              return openModal(jsoned[0]);
            });

          case 6:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _getProductInfo.apply(this, arguments);
}

function openModal(data) {
  console.log(data);
  var modal = document.querySelector('div.edit-product-modal');
  document.getElementById('product-id').value = data.id;
  document.getElementById('product-name').value = data.name;
  document.getElementById('product-desc').textContent = data.description;
  document.getElementById('product-quantity').value = data.quantity;
  document.getElementById('product-old-image').src = data.image;
  modal.classList.add('opened');
}

function closeModal(event) {
  document.querySelector('div.edit-product-modal').classList.remove('opened');
}

function sendData(_x3) {
  return _sendData.apply(this, arguments);
}

function _sendData() {
  _sendData = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(event) {
    var form, formData, productID, productName, productDesc, productQuantity, productNewImage;
    return regeneratorRuntime.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            event.preventDefault();
            form = document.querySelector('form.content-wrapper');
            formData = new FormData();
            productID = form.querySelector('input[name="product-id"]').value;
            productName = form.querySelector('input[name="product-name"]').value;
            productDesc = form.querySelector('textarea[name="product-desc"]').textContent;
            productQuantity = form.querySelector('input[name="product-quantity"]').value;
            productNewImage = form.querySelector('input[name="product-new-image"]').value;

            if (productNewImage === '') {
              productNewImage = document.getElementById('product-old-image').src;
            }

            console.log(productID);
            console.log(productName);
            console.log(productDesc);
            console.log(productQuantity);
            console.log(productNewImage);
            formData.append('productID', productID);
            formData.append('productName', productName);
            formData.append('productDesc', productDesc);
            formData.append('productQuantity', productQuantity);
            formData.append('productNewImage', productNewImage);
            _context2.next = 21;
            return fetch('/src/php/update-product.php', {
              method: 'POST',
              body: formData
            }).then(function (response) {
              return response.json();
            }).then(function (jsonedData) {
              if (jsonedData.updateStatus == 200) {
                console.log('Успешно');
              }
            });

          case 21:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));
  return _sendData.apply(this, arguments);
}

document.addEventListener('DOMContentLoaded', function (e) {
  document.querySelectorAll('button.manage-button.edit').forEach(function (item) {
    return item.addEventListener('click', getProductInfo);
  });
  document.querySelector('.close-modal').addEventListener('click', closeModal);
  document.getElementById('editProductButton').addEventListener('click', sendData);
});